Gérer les emplacements (genre widget wordpress)
Affecter du contenu aux emplacements
	- bannières
	- bannières + bouton
	- custom HTML

Séparer currency et lang
	- permettre de gérer un objet "SiteLang" composé de lang et currency
	- ou permettre de gérer Lang et Currency séparemment

Voir comment gérer les filtres produits
	- annotations
	- metod dans la classe enfant

Proposer les données "SESSION" par Ajax
	- contenu du panier
	- connecté à mon compte
	- wishlist
	- produit visités
	- etc.

Breadcrumbs ?

Gestion des formats d'image ?

Pouvoir intégrer du contenu aux menus (mêmes contenus que emplacements)

Penser à affecter des produits à une catégorie, mais aussi à son parent, mais manuellement !

Gérer les emails...

Paiements !!!!!

Factures

Retours de commande

Customers, si BtoB, tax à 0, et ajout de champs dans customers

Mettre en place une API automatiquement pour des projets avec en frontend Angular ou React. Utiliser Phalcon "micro" (https://olddocs.phalconphp.com/en/3.0.1/reference/tutorial-rest.html) ou bien phalcon-rest

Traductions
-----------
=> des produits/categories, permettre de générer des fichiers .po puis l'uploader pour les mises à jour de lang
=> ne pas faire de table _has_lang mais tout passer par des PO/MO :
	- lors de la modif d'un texte, on vérifie si l'ancien texte est dans les PO, si oui alors on modifie l'index des PO, si non, on ajoute. Ensuite, on compile le MO si possible
	- si un PO a été confié à un traducteur, il n'a pas ce nouvel index, alors il faudra le prendre en compte :
		* on garde un historique de chaque modification d'index
		* lorsqu'un index importé n'existe pas, on va le rechercher dans l'historique et le remplacer par la nouvelle version (récursif)
		* on supprime régulièrement les anciens index expirés
	- une page dans le BO fera une vérification des traductions dans chaque PO (si vide, si non existant partout, autres à trouver)
	- les champs qui seront "traduits" ont l'annotations "@Translate"
	- stocker dans une table en DB les différents champs "traduits", ainsi, on pourra savoir si le même texte existe plusieurs fois, et dupliquer l'index, sinon le modifier
